// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-11-13 11:49:27.212251893 +0800 CST m=+0.076620367

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/homework": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "教师端或是学生端获取作业列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "跳过的数量",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "一页返回的数量",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":200,\"data\":{\"count\":1,\"homeworks\":[{\"homework_id\":1,\"belong_class\":1,\"creator_id\":33,\"title\":\"软件工程第一次测试1\",\"creator\":\"牛莉\",\"create_time\":\"2019-11-10T13:54:12+08:00\",\"start_time\":\"2019-11-10T13:54:12+08:00\",\"end_time\":\"2019-11-10T13:54:12+08:00\"},null]},\"massage\":\"ok\"}",
                        "schema": {
                            "$ref": "#/definitions/v1.ResBody"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "description": "用户学号",
                        "name": "account_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "密码",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "10002": {
                        "description": "{\"code\":10002,\"data\":nil,\"msg\":\"用户不存在\"}",
                        "schema": {
                            "$ref": "#/definitions/v1.ResBody"
                        }
                    },
                    "10003": {
                        "description": "{\"code\":10003,\"data\":nil,\"msg\":\"密码错误\"}",
                        "schema": {
                            "$ref": "#/definitions/v1.ResBody"
                        }
                    },
                    "200": {
                        "description": "{\"code\":200,\"data\":nil,\"msg\":\"ok\"}",
                        "schema": {
                            "$ref": "#/definitions/v1.ResBody"
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "用户注册",
                "parameters": [
                    {
                        "description": "用户学号",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "姓名",
                        "name": "real_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "密码",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "软件工程",
                        "name": "major",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "年级",
                        "name": "level",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "用户类型",
                        "name": "u_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "10001": {
                        "description": "{\"code\":10001,\"data\":nil,\"msg\":\"该用户已注册\"}",
                        "schema": {
                            "$ref": "#/definitions/v1.ResBody"
                        }
                    },
                    "200": {
                        "description": "{\"code\":200,\"data\":nil,\"msg\":\"ok\"}",
                        "schema": {
                            "$ref": "#/definitions/v1.ResBody"
                        }
                    },
                    "400": {
                        "description": "{\"code\":400,\"data\":nil,\"msg\":\"请求参数错误\"}",
                        "schema": {
                            "$ref": "#/definitions/v1.ResBody"
                        }
                    },
                    "500": {
                        "description": "{\"code\":500,\"data\":nil,\"msg\":\"系统错误\"}",
                        "schema": {
                            "$ref": "#/definitions/v1.ResBody"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "v1.ResBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
